<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sfd.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AABAREQDQEREA0BERAM8QEAERklJAF9gYDhiZGRMQUVFADtAQAFBREQDQEREA0BERANAREQDQEREA0BE
        RARAREQDQEREBEFFRQQ9QUEFP0NDAF5eXh9sa2vYbWxs/1VXV1c5Pj4APUFBA0BERAVAREQEQEREBEBE
        RARAREQEQEREBEBERAQ9QUEFP0NDAFhZWRlxcHDoZWRk4FxcXE13dHT2WFlZVzg9PQA9QUEAQEREBUBE
        RARAREQEQEREBEBERAQ+QkIEPkJCAFlbWx1zcXH/Xl5ewWFhYYlgYWGPXFxcSG9tbe5WV1dqQEREBzxA
        QABAREQDQEREBEBERARAREQEQEREAFlaWh1ubW3acG5uv1NVVTtMTk4AX19fWUxQUABZW1s2dHJy/2lp
        adVER0caOT4+AEBERANAREQEQEREBEtOTi1vbm76Xl9fdk1PTwBLTk4AQEREAj5DQwBFSkoJZmZmwmNk
        ZGlxb29eampqyEdKSi89QUEAQEREBEBERANSVFQrdXR09VpcXHo4PDwAOz8/ADxBQQA3PDwFZGRk0mhp
        abNKTk4AU1VVAF5dXYVpZ2fmQUVFAj5CQgBAREQDQUVFAF9fXxl0cnLjWFlZlD1AQABBREQJaGho2Glp
        aZdKTU0AOD4+ADk7OxdiYGDLY2Rkf0JGRgE+QkIDQEREBDxBQQM8QEAAX19fH3RycuNVVlaDZmdnuWxr
        a7BITEwAOT4+AD9BQQ1iYGDMamlpxkVJSQA+Q0MAQEREBUBERARAREQEPD8/BUBERABYWlowcG9v/1xf
        X21JTEwAOj8/ADxAQA1dXV3LdHJy/1pcXHBESEgAPEFBAUBERAVAREQEQEREBEFERAU8QEAARUhIE2pp
        ac5YWFhhMzk5AEJERBNhYGDTc3Jy/2NjY/9sa2vVXF1dNDU6OgA7QEAAQEREBUBERARAREQEP0NDBD5D
        QwBLT08Wamho0FRWVpVgYWHLcG9vw1tbW3hnZ2feZ2dn/2loaPtdXV2ERUlJCTs/PwBAREQEQEREBEBE
        RAQ+QkIEPUFBAFFUVCNsa2vXZ2dnf1JVVQBFSEgAX19fM2ppafplZWX/cG9v/2NkZLxIS0sNQEREBEBE
        RARAREQDQEREBD5CQgRCRUUAWFlZAEpNTQA5Pj4APEBAAEZJSQBjYmKGampq/2ZnZ/9sa2v/T1BQJUBE
        RARAREQEQEREBEBERARAREQFP0NDBEBDQwA9QkICP0NDBUBDQwU8QUEBQ0VFDWFgYLltbGzzZWVlgkBE
        RAFAREQDQEREBEBERARAREQDQEREA0BERAQ/Q0MDQEREBEBERARAREQDP0NDBD1AQABZWVkAZmVlJVNU
        VAA+QkIBCQAAABCAAAAgYAAAQBAAAIUIAAAaBAAAHGIAAIjAAABBjAAAIwgAACIGAAAQAQAACMAAAAfg
        AAACAAAAABoAAA==
</value>
  </data>
</root>